name: CI/CD

on: [push, pull_request]

jobs:
  build:
    name: Build [${{ matrix.os }}, go v${{ matrix.go }}]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        go: ['1.15']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test -race ./...

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.15'
      - name: Build for macOS
        run: OS=darwin ARCH=amd64 GITHUB_REF=${{ github.ref }}  go run ./scripts/build.go bin/axis
      - name: Build for Linux
        run: OS=linux ARCH=amd64 GITHUB_REF=${{ github.ref }} go run ./scripts/build.go bin/axis
      - name: Build for Windows
        run: OS=windows ARCH=amd64 GITHUB_REF=${{ github.ref }} go run ./scripts/build.go bin/axis
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: TODO
          draft: true
      - name: Upload artifact for macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/axis_macos_amd64
          asset_name: axis_macos_amd64
          asset_content_type: application/octet-stream
      - name: Upload artifact for Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/axis_linux_amd64
          asset_name: axis_linux_amd64
          asset_content_type: application/octet-stream
      - name: Upload artifact for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/axis_windows_amd64
          asset_name: axis_windows_amd64
          asset_content_type: application/octet-stream
